global
    log         127.0.0.1 local0
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    #option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend kubernetes-control-plane
    bind *:6443
    default_backend kubernetes-control-plane
    mode tcp
    option tcplog

backend kubernetes-control-plane
    balance source
    mode tcp

{% for node in groups['masters'] %}
    server {{ hostvars[node].host_fqdn }} {{ hostvars[node].host_ip }}:6443 check
{% endfor %}


{% if k8s.install_nginx and hostvars[groups['masters'][0]].k8s_installed  %}
frontend nginx_http_nodeport
    bind *:80
    default_backend nginx_http_nodeport
    mode tcp
    option tcplog

backend nginx_http_nodeport
    balance source
    mode tcp

{% for node in groups['workers'] %}
    server {{ hostvars[node].host_fqdn }} {{ hostvars[node].host_ip }}:{{ hostvars[groups['masters'][0]].nginx_http_port }} check
{% endfor %}

frontend kubernetes-control-plane
    bind *:443
    default_backend nginx_https_nodeport
    mode tcp
    option tcplog

backend nginx_https_nodeport
    balance source
    mode tcp

{% for node in groups['workers'] %}
    server {{ hostvars[node].host_fqdn }} {{ hostvars[node].host_ip }}:{{ hostvars[groups['masters'][0]].nginx_https_port }} check
{% endfor %}

{% endif %}
