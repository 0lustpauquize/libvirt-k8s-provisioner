---
- name: Install cluster with kubeadm
  vars_files:
    - vars/k8s_cluster.yml
  hosts: masters[0]
  tasks:
    - block:
        - name: Start kubeadm install
          shell: kubeadm init --config /tmp/{{ k8s.cluster_name }}/kubeadm-config.yaml --upload-certs
          become: true
      
        - name: Get information on generated certificate
          openssl_certificate_info:
            path: /etc/kubernetes/pki/ca.crt
          register: cert
  
        - name: Set fact for certificate hash
          set_fact:
            kubehash: "sha256:{{ cert.public_key_fingerprints.sha256 | replace(':', '') }}"
  
        - name: Create kube directory
          file:
            path: /home/kube/.kube
            state: directory
    
        - name: Copy kubeconfig
          copy:
            src: /etc/kubernetes/admin.conf
            dest: /home/kube/.kube/config
            remote_src: true
            owner: "{{ ansible_user_id }}"
            group: "{{ ansible_user_id }}"
          become: true
  
        - name: Fetch kubeconfig file
          fetch:
            src: /etc/kubernetes/admin.conf
            dest: clusters/{{ k8s.cluster_name }}/admin.kubeconfig
            flat: yes
          become: true

        - set_fact:
            k8s_installed: true
      when: k8s_installed is not defined

- name: Verify cluster has been initialized
  vars_files:
    - vars/k8s_cluster.yml
  hosts: vm_host
  tasks:
    - name: Wait for control-plane pods to be up and running
      kubernetes.core.k8s:
        state: present
        api_version: v1
        kind: Pod
        namespace: kube-system
        label_selectors:
          tier = control-plane
        kubeconfig: "clusters/{{ k8s.cluster_name }}/admin.kubeconfig"
        wait: yes
      when: hostvars[groups['masters'][0]].k8s_installed is not defined
