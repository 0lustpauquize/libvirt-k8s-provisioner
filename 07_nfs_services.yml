- name: Setup NFS server
  hosts: nfs
  become: true
  vars_files:
    - vars/k8s_cluster.yml
  tasks:
    - name: Handle setup of NFS server
      block:

      - name: Manage packages on CentOS
        block:
        - name: Upgrade all packages
          yum:
            name: '*'
            state: latest
        - name: Install packages
          yum:
            name: "{{ packages_server.centos }}"
            state: latest
        when: k8s.cluster_os == 'CentOS'

      - name: Manage packages on Ubuntu
        block:
        - name: Upgrade all packages
          apt:
            name: '*'
            state: latest
        - name: Install packages
          apt:
            name: "{{ packages_server.ubuntu }}"
            state: latest
        when: k8s.cluster_os == 'Ubuntu'

      - name: Ensure NFS Service is enabled
        service:
          name: "{{ 'nfs-server' if k8s.cluster_os == 'CentOS' else 'nfs-kernel-server' }}"
          enabled: true
          state: started

      - name: Ensure firewalld Service is enabled
        service:
          name: firewalld
          enabled: true
          state: started

      - name: Set interface to internal zone
        shell: nmcli connection modify System\ eth0 connection.zone internal
        when: k8s.cluster_os == 'CentOS'

      - name: Stop NetworkManager
        service:
          name: NetworkManager
          state: stopped

      - name: Adding interface to firewall internal zone
        ansible.posix.firewalld:
          zone: internal
          interface: "{{ 'eth0' if k8s.cluster_os == 'CentOS' else 'ens3' }}"
          permanent: yes
          state: enabled

      - name: Start NetworkManager
        service:
          name: NetworkManager
          state: started
          enabled: true

      - name: Allow service for internal zone
        ansible.posix.firewalld:
          zone: internal
          state: enabled
          permanent: yes
          service: "{{ item }}"
        loop: "{{ services }}"

      - name: Allow ports for internal zone
        ansible.posix.firewalld:
          zone: internal
          state: enabled
          permanent: yes
          port: "{{ item }}"
        loop: "{{ ports }}"

      - name: Reload firewalld service
        service:
          name: firewalld
          state: restarted

      - name: Ensure partition is present for NFS
        parted:
          device: /dev/vdb
          label: msdos
          number: 1
          part_start: 0%
          part_end: 100%
          state: present

      - name: Create filesystem on partitions
        filesystem:
          fstype: ext4
          dev: /dev/vdb1

      - name: Create mountpoints
        file:
          path: "{{ k8s.storage.nfs_export }}"
          state: directory
          owner: nobody
          group: "{{ 'nobody' if k8s.cluster_os == 'CentOS' else 'nogroup' }}"
          mode: 0777
          recurse: yes

      - name: Mount the filesystems
        mount:
          fstype: ext4
          src: /dev/vdb1
          path: "{{ k8s.storage.nfs_export }}"
          state: mounted

      - name: Create mountpoints
        file:
          path: /etc/exports.d
          state: directory

      - name: Populate exports with created path
        copy:
          content: "{{ k8s.storage.nfs_export }}    *(rw,sync,no_subtree_check,no_root_squash,no_all_squash,insecure)"
          dest: /etc/exports.d/nfs.exports

      - name: Reload NFS Service
        service:
          name: "{{ 'nfs-server' if k8s.cluster_os == 'CentOS' else 'nfs-kernel-server' }}"
          state: restarted

      when: k8s.storage.nfs_enabled
