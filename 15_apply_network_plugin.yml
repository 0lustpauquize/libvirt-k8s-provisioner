--- 
- hosts: masters
  name: "Apply network plugin"
  run_once: true
  tasks: 
    - 
      block: 
        - 
          command: "kubectl apply -f {{ cni_plugins.calico.calico_repo }}"
          name: "Apply network addon - Calico"
        - 
          delay: 30
          name: "Wait for Calico pods to be created"
          register: calico_dns_pods_created
          retries: 10
          shell: "kubectl get po --namespace=kube-system --selector k8s-app=calico-node --output=jsonpath='{.items[*].metadata.name}'"
          until: "item in calico_dns_pods_created.stdout"
          with_items: 
            - calico-node
        - 
          name: "Wait for core-dns pods become ready"
          register: calico_dns_pods_ready
          shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector k8s-app=calico-node --timeout=600s"
        - 
          delay: 30
          name: "Wait for kube-dns pods become created"
          register: kube_dns_pods_created
          retries: 10
          shell: "kubectl get po --namespace=kube-system --selector k8s-app=kube-dns --output=jsonpath='{.items[*].metadata.name}'"
          until: "item in kube_dns_pods_created.stdout"
          with_items: 
            - coredns
        - 
          name: "Wait for core-dns pods become ready"
          register: kube_dns_pods_ready
          shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector k8s-app=kube-dns --timeout=600s"
      name: "Configure and define resources for Calico"
      when: "k8s.network.cni_plugin == 'calico'"
    - 
      block: 
        - 
          get_url: 
            dest: /tmp/kube-flannel.yml
            url: "{{ cni_plugins.flannel.flannel_repo }}"
          name: "Download flannel manifest"
        - 
          name: "Patch kube-flannel to use host-gw instead of vxlan"
          replace: 
            path: /tmp/kube-flannel.yml
            regexp: vxlan
            replace: host-gw
        - 
          name: "apply network addon - Flannel"
          shell: "kubectl apply -f /tmp/kube-flannel.yml"
        - 
          delay: 30
          name: "Wait for flannel pods become created"
          register: flannel_dns_pods_created
          retries: 10
          shell: "kubectl get po --namespace=kube-system --selector app=flannel --output=jsonpath='{.items[*].metadata.name}'"
          until: "item in flannel_dns_pods_created.stdout"
          with_items: 
            - kube-flannel-ds
        - 
          name: "Wait for core-dns pods become ready"
          register: flannel_dns_pods_ready
          shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector app=flannel --timeout=600s"
        - 
          delay: 30
          name: "Wait for kube-dns pods become created"
          register: kube_dns_pods_created
          retries: 10
          shell: "kubectl get po --namespace=kube-system --selector k8s-app=kube-dns --output=jsonpath='{.items[*].metadata.name}'"
          until: "item in kube_dns_pods_created.stdout"
          with_items: 
            - coredns
        - 
          name: "Wait for core-dns pods become ready"
          register: kube_dns_pods_ready
          shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector k8s-app=kube-dns --timeout=600s"
      name: "Install Flannel"
      when: "k8s.network.cni_plugin == 'flannel'"
  vars_files: 
    - vars/k8s_cluster.yml
