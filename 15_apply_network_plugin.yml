---
- name: Apply network plugin
  hosts: masters
  run_once: true
  vars_files:
    - vars/k8s_cluster.yml
  tasks:
    - block:
        - name: Apply network addon - Calico
          command: kubectl apply -f {{ cni_plugins.calico.calico_operator }}
        - name: Apply CRDs
          command: kubectl apply -f {{ cni_plugins.calico.calico_crd }}
        - name: Patch operator resource with correct CIDR
          command: "kubectl patch installation default --type='json' -p='[{\"op\": \"replace\", \"path\": \"/spec/calicoNetwork/ipPools/0/cidr\", \"value\": {{ k8s.network.pod_cidr }} }]'"

        - name: Wait for Calico pods to be created
          shell: "kubectl get po --namespace=calico-system --output=jsonpath='{.items[*].metadata.name}'"
          register: calico_dns_pods_created
          until: item in calico_dns_pods_created.stdout
          retries: 10
          delay: 30
          with_items:
            - calico-node
            - calico-typha
            - calico-kube-controllers

        - name: Wait for Calico pods become ready
          shell: "kubectl wait --namespace=calico-system --for=condition=Ready pods --selector k8s-app=calico-node --timeout=600s"
          register: calico_dns_pods_ready

      when: k8s.network.cni_plugin == 'calico'

    - block:
        - name: Download Cilium CLI 
          unarchive:
            src: "{{ cni_plugins.cilium.cilium_cli }}"
            dest: /usr/local/bin
            remote_src: yes
          become: true

        - name: Run Cilium installer
          command: cilium install --ipam kubernetes

        - name: Ensure Cilium is correctly installed
          command: cilium status --wait 

      when: k8s.network.cni_plugin == 'cilium'

    - block:
        - name: Download flannel manifest
          get_url:
            url: "{{ cni_plugins.flannel.flannel_repo }}"
            dest: /tmp/kube-flannel.yml
        
        - name: Patch kube-flannel to use host-gw instead of vxlan
          replace:
            path: /tmp/kube-flannel.yml
            regexp: 'vxlan'
            replace: 'host-gw'

        - name: apply network addon - Flannel
          shell: kubectl apply -f /tmp/kube-flannel.yml

        - name: Wait for flannel pods to be created
          shell: "kubectl get po --namespace=kube-system --selector app=flannel --output=jsonpath='{.items[*].metadata.name}'"
          register: flannel_dns_pods_created
          until: item in flannel_dns_pods_created.stdout
          retries: 10
          delay: 30
          with_items:
            - kube-flannel-ds

        - name: Wait for flannel pods to become ready
          shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector app=flannel --timeout=600s"
          register: flannel_dns_pods_ready

      when: k8s.network.cni_plugin == 'flannel'

    - name: Wait for coredns pods become created
      shell: "kubectl get po --namespace=kube-system --selector k8s-app=kube-dns --output=jsonpath='{.items[*].metadata.name}'"
      register: kube_dns_pods_created
      until: item in kube_dns_pods_created.stdout
      retries: 10
      delay: 30
      with_items:
        - coredns

    - name: Wait for core-dns pods become ready
      shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector k8s-app=kube-dns --timeout=600s"
      register: kube_dns_pods_ready
