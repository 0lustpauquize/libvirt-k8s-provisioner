--- 
- name: Prepare cluster to install metalLB
  hosts: vm_host
  run_once: true
  vars_files:
    - vars/k8s_cluster.yml
  tasks:
    - block:

      - name: Render template for L2 configuration
        template:
          src: templates/metallb-l2.j2
          dest: /tmp/metallb-l2.yaml

      - name: Download metal-lb CR for later apply
        ansible.builtin.get_url:
          url: "{{ item.url }}"
          dest: "{{ item.name }}"
          mode: '0664'
        loop:
          - name: /tmp/metallb-ns.yaml
            url: "{{ metallb_setup.manifest_url }}/namespace.yaml"
          - name: /tmp/metallb.yaml
            url: "{{ metallb_setup.manifest_url }}/metallb.yaml"

      - name: Ensure metal-lb namespace is present
        kubernetes.core.k8s:
          state: present
          src: "{{ item }}"
          kubeconfig: "clusters/{{ k8s.cluster_name }}/admin.kubeconfig"
          wait: yes
        loop:
          - /tmp/metallb-ns.yaml

# - name: Ensure managed nodes secret is present
# kubernetes.core.k8s:
#         state: present
#          definition:
#            apiVersion: v1
#            kind: Secret
#            metadata:
#              name: memberlist
#              namespace: metallb-system
#            data:
#              secretkey: "{{ lookup('community.general.random_string', lenght=128, base64=True) }}"

      - name: Ensure metal-lb is installed in your cluster
        kubernetes.core.k8s:
          state: present
          src: "{{ item }}"
          kubeconfig: "clusters/{{ k8s.cluster_name }}/admin.kubeconfig"
          #wait: yes
          apply: yes
        loop:
          - /tmp/metallb.yaml
          - /tmp/metallb-l2.yaml

#      - name: Prepare setup script
#        template :
#          src: templates/metallb-setup.sh.j2
#          dest: /tmp/metallb-setup.sh
#          mode: +x
#
#      - name: Execute setup script 
#        shell:  /tmp/metallb-setup.sh
#        ignore_errors: true
#
#      - name: Wait for metallb-pods to be created
#        shell: "kubectl wait --namespace=metallb-system --for=condition=Ready pods -l 'app=metallb'  --timeout=600s"
#
      - name: Render template for L2 configuration
        template:
          src: templates/metallb-l2.j2
          dest: /tmp/metallb-l2.yaml

#      - name: Create configmap for l2 setup 
#       shell: "kubectl create -f /tmp/metallb-l2.yaml"
#        ignore_errors: true

#      - name: Wait for all metallLB pods to be created
#        shell: "kubectl get po --namespace=metallb-system --output=jsonpath='{.items[*].metadata.name}'"
#        register: metallb_pods_created
#        until: item in metallb_pods_created.stdout
#        retries: 30
#        delay: 20
#        with_items:
#          - controller
#          - speaker
#
#      - name: Wait for metalLB pods to be ready (May take a while..)
#        shell: "kubectl wait --namespace=metallb-system --for=condition=Ready pods -l 'app=metallb' --timeout=600s"

      when: metallb.install_metallb

