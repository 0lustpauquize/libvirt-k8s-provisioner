- name: This play provisions OCP VMs based on intial config
  hosts: vm_host
  vars_files:
    - vars/k8s_cluster.yml
    - vars/libvirt.yml
  tasks:
    - terraform:
        project_path: "files/terraform/masters"
        force_init: true
        variables:
          hostname: "k8s-master"
          domain: "{{ libvirt.network.domain }}"
          libvirt_network: "{{ libvirt.network.name }}"
          libvirt_pool: "{{ libvirt.storage.pool_name }}"
          cpu: "{{ k8s.control_plane.vcpu }}"
          memory: "{{ k8s.control_plane.mem }}"
#          vm_volume_size: "{{ k8s.control_plane.disk }}"
          vm_count: "{{ k8s.control_plane.vms }}"
        state: present
      register: output_masters

    - terraform:
        project_path: "files/terraform/workers"
        force_init: true
        variables:
          hostname: "k8s-worker"
          domain: "{{ libvirt.network.domain }}"
          libvirt_network: "{{ libvirt.network.name }}"
          libvirt_pool: "{{ libvirt.storage.pool_name }}"
          cpu: "{{ k8s.worker_nodes.vcpu }}"
          memory: "{{ k8s.worker_nodes.mem }}"
#          vm_volume_size: "{{ k8s.worker_nodes.disk }}"
          vm_count: "{{ k8s.worker_nodes.vms }}"
        state: present
      register: output_workers

    - name: Create ssh keypair
      openssh_keypair:
        path: "id_rsa"

    - name: Add masters to given group
      add_host:
        hostname: 'k8s-master-{{ item }}'
        node_hostname: 'k8s-master-{{ item }}'
        node_mac: "{{ output_masters.outputs.macs.value[item]|lower }}"
        node_fqdn: k8s-master-{{ item }}.{{ libvirt.network.domain }} 
        ansible_ssh_private_key_file: "id_rsa"
        ansible_user: kube
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        groups:
          - "masters"
      loop: "{{ range(0, k8s.control_plane.vms) | list }}"

    - name: Add workers to given group
      add_host:
        hostname: 'k8s-worker-{{ item }}'
        node_hostname: 'k8s-worker-{{ item }}'
        node_mac: "{{ output_workers.outputs.macs.value[item]|lower }}"
        node_fqdn: k8s-worker-{{ item }}.{{ libvirt.network.domain }}
        ansible_ssh_private_key_file: "id_rsa"
        ansible_user: kube
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        groups:
          - "workers"
      loop: "{{ range(0, k8s.worker_nodes.vms) | list }}"

    - name: Ensure to clean known_hosts
      known_hosts:
        host: "{{ item }}"
        path: ~/.ssh/known_hosts
        state: absent
      loop: "{{ query('inventory_hostnames', 'all:!vm_host') }}"

- name: Check connection, rename connection and set facts
  hosts: masters,workers
  gather_facts: no
  tasks:
    - name: Wait 600 seconds for target connection to become reachable/usable
      wait_for_connection:
        timeout: 120
        delay: 0
    - ping:

    - setup:
      register: machine_facts

    - set_fact:
        host_ip: "{{ machine_facts.ansible_facts.ansible_default_ipv4.address }}"
        host_interface: "{{ machine_facts.ansible_facts.ansible_default_ipv4.interface }}"
        host_mac: "{{ machine_facts.ansible_facts.ansible_default_ipv4.macaddress }}"
        host_fqdn: "{{ machine_facts.ansible_facts.ansible_fqdn }}" 
